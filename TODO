TODO List
-------------

-=High Priority=-

*Item view tasks
	|-Deterministic channel tabs fields based off channel platform type
	|-Write function to identify what content is available for specific parent_sku
	|-Update item alias system to check and handle variations
		*If item is configured for variation, select variation from dropdown list to associate w/ other alias
	|-Discontinue/Undiscontinue item button and function
	|-Update "Update Item" function to check if item is discontinued and if so leave it at that status
	|-IMAGE REPOSITORY!!!!111one...
	\-Move all styles to central css
	
*Item form logic tasks
	|-Form validation(integer/numbers only, stripslashes, etc)
	|-Log different item update types into content_log
	\-Add item vendor update validation to check that Vendor code is valid and that vendor code/sku is not duplicated!

*Item Search view tasks
	|-Rewrite paging to eliminate form buttons and use urls instead(maybe??)
	|-Display current page #
	|-Parent Sku sort order icon (alopez maybe?)
	|-Listed channel icons in search view for immediate at a glance view of what items have content where (alopez maybe??)
	|-Add item status icon for discontinued items??? Add ability to flag item as discontinued
	\-Determine/implement best method to lock and unlock items to prevent edit collisions
	

-=Medium Priority=-
*Research best method to implement user authentication and permission structure (assigned to zroed)
*Determine file format export requirements based on channel platform type (assigned to zroed)
*Examine channel api requirements based on platform type (assigned to zroed)
*Item search icon key table (right float??)

-=Low Priority=-
*Create portal.php (assigned to zroed)
	|-Portal page used as a landing page when users login, display channel content stats, basic report of stale content/images, other data
	\-Build mockup
	
*Map out what item analytics type reports need to be built and what data is required

-=LOL WUT Priority=-

*InnovExport Utilities
	|-Continual refinement of Fraud Check process for OM
	|-Add AVS/CVV fields, modify SPROCs to trigger on AVS as well
	|-Additional Order Search functions
	|-Order Search paging
	|-Order Viewer similiar for single item view w/ tabbed interface
	\-Custom Reports
	
*Research best method to build multi-channel order import automation to supplant OM functionality
	|-Per channel modules with configurable settings like timing, mode (manual, auto), etc
	|-vCMS not designed to handle order data directly but modules with be controlled via vcms interface
	\-specific modules will pull data from channel and insert into MSSQL OM db via php odbc functions

-=Completed Tasks=-
*Item Search paging
*Built controllers and views for sku generation.  Basic new sku data is auto-populated into the db.
*Updated db schema so parent_sku is used in all major tables.  Parent_sku is used to join most tables.
*Updated skugen to insert into all the necessary tables for item data based on parent_sku.  Variation data only matters in variant_header 
*Built generic multi-item search functionality and a limited view based on query results (needs heavy tweaking not final vers)
*UI CSS updates, 1px table border with nice css3 box-shadow.
*Added item search icon for USED status item_alloc items.
*Implemented sticklr jquery menu navigation, will need continual adjustments for new pages
*Implemented Sears import tool for ajillson required includes are not on committed for security reasons
*Implements InnovExport: New Orders, Item Mapping, 
*Wrote function that will accept parent_sku, table, field as input and output field results used for single item view
*Wrote function that will accept parent_sku, table, field and values to update specific fields in the db, used mainly by form processor
*Restructured all individual functions by ui and logical functions, built f_vCMS_ui_core.php and f_vCMS_logic_core.php
*Channel master select function is now more dynamic based on listed_item table for parent_sku
*Handling of updates for multiple vendors on Item vendor/alias tab
*Delete item vendor function
*Implemented tabbed view save state after submit (change active tab to keep them on the same one after form submit)
*Item Search parent_sku sort order
*Converted item search to $_GET instead of post for easier flexibility
*f_vCMS_ui_core.php code normalization
*Item alias form for Item vendor/alias tab 
*Redirect from Sku generator to newly generated skus based on $catPref and status NEW to Item search
*Decreased processor redirect timings on form updates
*Split item mfg table from item_vendor_table added item_alias_table as its own function.  It is cleaner to treat them as sep. objects
*Fixed item search bug with pagination count queries
*Added htmlspecialchars on most item view fields and assoc functions/processes to prevent sqli and query breaks